//
// This file was generated by the JavaTM Architecture for XML Binding(JAXB) Reference Implementation, v2.2.7 
// See <a href="http://java.sun.com/xml/jaxb">http://java.sun.com/xml/jaxb</a> 
// Any modifications to this file will be lost upon recompilation of the source schema. 
// Generated on: 2019.01.14 at 11:26:32 AM AEDT 
//


package org.apromore.service.pql.ws.model;

import java.util.ArrayList;
import java.util.List;
import javax.xml.bind.annotation.XmlAccessType;
import javax.xml.bind.annotation.XmlAccessorType;
import javax.xml.bind.annotation.XmlAttribute;
import javax.xml.bind.annotation.XmlType;
import org.jvnet.jaxb2_commons.lang.Equals;
import org.jvnet.jaxb2_commons.lang.EqualsStrategy;
import org.jvnet.jaxb2_commons.lang.HashCode;
import org.jvnet.jaxb2_commons.lang.HashCodeStrategy;
import org.jvnet.jaxb2_commons.lang.JAXBEqualsStrategy;
import org.jvnet.jaxb2_commons.lang.JAXBHashCodeStrategy;
import org.jvnet.jaxb2_commons.lang.JAXBToStringStrategy;
import org.jvnet.jaxb2_commons.lang.ToString;
import org.jvnet.jaxb2_commons.lang.ToStringStrategy;
import org.jvnet.jaxb2_commons.locator.ObjectLocator;
import org.jvnet.jaxb2_commons.locator.util.LocatorUtils;


/**
 * <p>Java class for RunAPQLInputMsgType complex type.
 * 
 * <p>The following schema fragment specifies the expected content contained within this class.
 * 
 * <pre>
 * &lt;complexType name="RunAPQLInputMsgType">
 *   &lt;complexContent>
 *     &lt;restriction base="{http://www.w3.org/2001/XMLSchema}anyType">
 *       &lt;sequence>
 *         &lt;element name="ids" type="{http://www.w3.org/2001/XMLSchema}string" maxOccurs="unbounded" minOccurs="0"/>
 *       &lt;/sequence>
 *       &lt;attribute name="APQLExpression" type="{http://www.w3.org/2001/XMLSchema}string" />
 *       &lt;attribute name="UserID" type="{http://www.w3.org/2001/XMLSchema}string" />
 *     &lt;/restriction>
 *   &lt;/complexContent>
 * &lt;/complexType>
 * </pre>
 * 
 * 
 */
@XmlAccessorType(XmlAccessType.FIELD)
@XmlType(name = "RunAPQLInputMsgType", propOrder = {
    "ids"
})
public class RunAPQLInputMsgType
    implements Equals, HashCode, ToString
{

    protected List<String> ids;
    @XmlAttribute(name = "APQLExpression")
    protected String apqlExpression;
    @XmlAttribute(name = "UserID")
    protected String userID;

    /**
     * Gets the value of the ids property.
     * 
     * <p>
     * This accessor method returns a reference to the live list,
     * not a snapshot. Therefore any modification you make to the
     * returned list will be present inside the JAXB object.
     * This is why there is not a <CODE>set</CODE> method for the ids property.
     * 
     * <p>
     * For example, to add a new item, do as follows:
     * <pre>
     *    getIds().add(newItem);
     * </pre>
     * 
     * 
     * <p>
     * Objects of the following type(s) are allowed in the list
     * {@link String }
     * 
     * 
     */
    public List<String> getIds() {
        if (ids == null) {
            ids = new ArrayList<String>();
        }
        return this.ids;
    }

    /**
     * Gets the value of the apqlExpression property.
     * 
     * @return
     *     possible object is
     *     {@link String }
     *     
     */
    public String getAPQLExpression() {
        return apqlExpression;
    }

    /**
     * Sets the value of the apqlExpression property.
     * 
     * @param value
     *     allowed object is
     *     {@link String }
     *     
     */
    public void setAPQLExpression(String value) {
        this.apqlExpression = value;
    }

    /**
     * Gets the value of the userID property.
     * 
     * @return
     *     possible object is
     *     {@link String }
     *     
     */
    public String getUserID() {
        return userID;
    }

    /**
     * Sets the value of the userID property.
     * 
     * @param value
     *     allowed object is
     *     {@link String }
     *     
     */
    public void setUserID(String value) {
        this.userID = value;
    }

    public String toString() {
        final ToStringStrategy strategy = JAXBToStringStrategy.INSTANCE;
        final StringBuilder buffer = new StringBuilder();
        append(null, buffer, strategy);
        return buffer.toString();
    }

    public StringBuilder append(ObjectLocator locator, StringBuilder buffer, ToStringStrategy strategy) {
        strategy.appendStart(locator, this, buffer);
        appendFields(locator, buffer, strategy);
        strategy.appendEnd(locator, this, buffer);
        return buffer;
    }

    public StringBuilder appendFields(ObjectLocator locator, StringBuilder buffer, ToStringStrategy strategy) {
        {
            List<String> theIds;
            theIds = this.getIds();
            strategy.appendField(locator, this, "ids", buffer, theIds);
        }
        {
            String theAPQLExpression;
            theAPQLExpression = this.getAPQLExpression();
            strategy.appendField(locator, this, "apqlExpression", buffer, theAPQLExpression);
        }
        {
            String theUserID;
            theUserID = this.getUserID();
            strategy.appendField(locator, this, "userID", buffer, theUserID);
        }
        return buffer;
    }

    public boolean equals(ObjectLocator thisLocator, ObjectLocator thatLocator, Object object, EqualsStrategy strategy) {
        if (!(object instanceof RunAPQLInputMsgType)) {
            return false;
        }
        if (this == object) {
            return true;
        }
        final RunAPQLInputMsgType that = ((RunAPQLInputMsgType) object);
        {
            List<String> lhsIds;
            lhsIds = this.getIds();
            List<String> rhsIds;
            rhsIds = that.getIds();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "ids", lhsIds), LocatorUtils.property(thatLocator, "ids", rhsIds), lhsIds, rhsIds)) {
                return false;
            }
        }
        {
            String lhsAPQLExpression;
            lhsAPQLExpression = this.getAPQLExpression();
            String rhsAPQLExpression;
            rhsAPQLExpression = that.getAPQLExpression();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "apqlExpression", lhsAPQLExpression), LocatorUtils.property(thatLocator, "apqlExpression", rhsAPQLExpression), lhsAPQLExpression, rhsAPQLExpression)) {
                return false;
            }
        }
        {
            String lhsUserID;
            lhsUserID = this.getUserID();
            String rhsUserID;
            rhsUserID = that.getUserID();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "userID", lhsUserID), LocatorUtils.property(thatLocator, "userID", rhsUserID), lhsUserID, rhsUserID)) {
                return false;
            }
        }
        return true;
    }

    public boolean equals(Object object) {
        final EqualsStrategy strategy = JAXBEqualsStrategy.INSTANCE;
        return equals(null, null, object, strategy);
    }

    public int hashCode(ObjectLocator locator, HashCodeStrategy strategy) {
        int currentHashCode = 1;
        {
            List<String> theIds;
            theIds = this.getIds();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "ids", theIds), currentHashCode, theIds);
        }
        {
            String theAPQLExpression;
            theAPQLExpression = this.getAPQLExpression();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "apqlExpression", theAPQLExpression), currentHashCode, theAPQLExpression);
        }
        {
            String theUserID;
            theUserID = this.getUserID();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "userID", theUserID), currentHashCode, theUserID);
        }
        return currentHashCode;
    }

    public int hashCode() {
        final HashCodeStrategy strategy = JAXBHashCodeStrategy.INSTANCE;
        return this.hashCode(null, strategy);
    }

}
